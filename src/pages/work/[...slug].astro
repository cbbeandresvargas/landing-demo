---
import { getProjects, getProjectById } from "@utils/projects";
import type { AstroSeoProps } from "@astrolib/seo";
import MarkdownPostLayout from "../../layouts/MarkdownPostLayout.astro";
import projectTemplateImage from "@assets/images/projects/project-template.jpg";

export async function getStaticPaths() {
	const projects = getProjects("en");
	
	return projects.map((project) => ({
		params: { slug: project.id },
		props: { project },
	}));
}

const { project } = Astro.props;

const seo: AstroSeoProps = {
	title: `Project ${project.title} - Majestico`,
	description: project.description,
	canonical: `https://mintaka.co/work/${project.id}/`,
	openGraph: {
		url: project.id,
		title: project.title,
		description: project.description,
		images: [
			{
				url: `https://mintaka.co/_astro/${project.image}`,
				width: 1200,
				height: 630,
				alt: project.title,
				type: "image/jpeg",
			},
		],
		site_name: "Majestico",
	},
	twitter: {
		handle: "@TwitterHandle",
		site: "@site",
		cardType: "summary_large_image",
	},
};

// Convert content to markdown-like format for the layout
const frontmatter = {
	title: project.title,
	description: project.description,
	pubDate: new Date(project.pubDate),
	link: project.link,
	image: {
		source: projectTemplateImage,
		alt: project.title,
	},
};

const body = project.content;
---

<MarkdownPostLayout frontmatter={frontmatter} body={body} seo={seo}>
	<div class="prose prose-invert max-w-none">
		{project.content.split('\n').map(paragraph => 
			paragraph.trim() ? `<p>${paragraph}</p>` : ''
		).join('')}
	</div>
</MarkdownPostLayout>
