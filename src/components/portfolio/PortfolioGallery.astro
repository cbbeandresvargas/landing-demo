---
// PortfolioGallery.astro - 3D Gallery component for Portfolio page
import { getLangFromUrl } from "@i18n/utils";
import projectsData from "@data/projects.json";

const lang = getLangFromUrl(Astro.url);
const projects = projectsData.projects.map(project => ({
	title: project.title[lang] || project.title.en,
	description: project.description[lang] || project.description.en,
	image: `/assets/images/projects/${project.image}`,
	technologies: project.technologies || []
}));
---

<!-- 3D Portfolio Gallery -->
<section class="portfolio-gallery-section section home-dark-section min-h-screen flex items-center relative overflow-hidden">
	<div class="col-span-12 h-screen w-full">    

		<!-- Preview Image -->
		<div class="preview-img absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[320px] h-[220px] z-20 rounded-lg overflow-hidden shadow-2xl">
			<img
				src="/assets/images/projects/project-template.jpg"
				alt="Project Preview"
				class="w-full h-full object-cover"
			/>
			<div class="absolute inset-0 bg-black bg-opacity-40 flex items-center justify-center opacity-0 hover:opacity-100 transition-opacity duration-300">
				<div class="text-center text-white">
					<h3 class="text-xl font-bold mb-2">Project Title</h3>
					<p class="text-sm">Click to view details</p>
				</div>
			</div>
		</div>

    <!-- 3D Gallery Container -->
    <div class="container absolute inset-0 w-full h-full overflow-hidden [perspective:1200px]">
        <div class="gallery absolute top-[18%] left-1/2 [transform-style:preserve-3d] [transform:translateX(-50%)_rotateX(50deg)]">
				<!-- Gallery items will be dynamically generated by JavaScript -->
			</div>
		</div>

		<!-- Project Info Panel -->
    <div class="project-info absolute bottom-6 left-6 right-6 z-10 bg-black bg-opacity-80 backdrop-blur-sm rounded-md p-4 text-white">
			<div class="max-w-4xl mx-auto">
            <h2 class="text-xl font-bold mb-2 font-display">Selected Project</h2>
            <p class="text-slate-300 mb-3">Hover over items in the gallery to preview projects</p>
				<div class="flex flex-wrap gap-2">
					<span class="bg-slate-700 text-slate-300 px-3 py-1 rounded text-sm">React</span>
					<span class="bg-slate-700 text-slate-300 px-3 py-1 rounded text-sm">Node.js</span>
					<span class="bg-slate-700 text-slate-300 px-3 py-1 rounded text-sm">MongoDB</span>
				</div>
			</div>
		</div>
	</div>
</section>

<script define:vars={{ projects }}>
	// Make projects data available to the client-side script
	window.projectsData = projects;
</script>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";

	gsap.registerPlugin(ScrollTrigger);

	function initializePortfolioGallery() {
		const gallery = document.querySelector(".gallery");
		const previewImage = document.querySelector(".preview-img img");
		const projectInfo = document.querySelector(".project-info");
		const projectTitle = projectInfo?.querySelector("h2");
		const projectDescription = projectInfo?.querySelector("p");
		const projectTags = projectInfo?.querySelector(".flex.flex-wrap.gap-2");

		if (!gallery || !previewImage || !projectInfo) {
			return;
		}

		// Project data is now loaded from the server-side
		const projects = window.projectsData || [];

		// Mouse movement for 3D rotation
		document.addEventListener("mousemove", function (event) {
			const x = event.clientX;
			const y = event.clientY;

			const centerX = window.innerWidth / 2;
			const centerY = window.innerHeight / 2;

        const percentX = (x - centerX) / centerX;

        const rotateX = 50 + percentX * 1.5;
        const rotateY = percentX * 1.5;

			gsap.to(gallery, {
				duration: 1,
				ease: "power2.out",
				rotateX: rotateX,
				rotateY: rotateY,
				overwrite: "auto",
			});
		});

		// Create gallery items
        for (let i = 0; i < Math.max(24, projects.length * 1); i++) {
			const item = document.createElement("div");
            item.className = "item absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[45px] h-[60px] m-[10px] [transform-style:preserve-3d] bg-slate-800 rounded-lg overflow-hidden shadow-lg";
			
			const img = document.createElement("img");
			const projectIndex = i % projects.length;
			img.src = projects[projectIndex].image;
			img.className = "w-full h-full object-cover";
			img.alt = projects[projectIndex].title;

			item.appendChild(img);
			gallery.appendChild(item);
		}

		const items = document.querySelectorAll(".item");
		const numberOfItems = items.length;
		const angleIncrement = 360 / numberOfItems;

		// Setup gallery positioning and interactions
        items.forEach((item, index) => {
			gsap.set(item, {
				rotationY: 90,
                rotationZ: index * angleIncrement - 90,
                transformOrigin: "50% 320px",
			});

			item.addEventListener("mouseover", function () {
				const imgInsideItem = item.querySelector("img") as HTMLImageElement;
				const projectIndex = index % projects.length;
				const project = projects[projectIndex];

				if (imgInsideItem) {
					(previewImage as HTMLImageElement).src = imgInsideItem.src;
				}

				// Update project info
				if (projectTitle) projectTitle.textContent = project.title;
				if (projectDescription) projectDescription.textContent = project.description;
				if (projectTags) {
					projectTags.innerHTML = project.technologies.map(tech => 
						`<span class="bg-slate-700 text-slate-300 px-3 py-1 rounded text-sm">${tech}</span>`
					).join('');
				}

            gsap.to(item, {
                x: 10,
                z: 10,
                y: 10,
					ease: "power2.out",
					duration: 0.5,
				});
			});

			item.addEventListener("mouseout", function () {
				gsap.to(item, {
					x: 0,
					y: 0,
					z: 0,
					ease: "power2.out",
					duration: 0.5,
				});
			});
		});

		// Scroll-triggered rotation
		ScrollTrigger.create({
			trigger: ".portfolio-gallery-section",
			start: "top top",
			end: "bottom bottom",
			scrub: 2,
			onUpdate: (self) => {
				const rotationProgress = self.progress * 360 * 1;
				items.forEach((item, index) => {
					const currentAngle = index * angleIncrement - 90 + rotationProgress;
					gsap.to(item, {
						rotationZ: currentAngle,
						duration: 1,
						ease: "power3.out",
						overwrite: "auto",
					});
				});
			},
		});
	}

	document.removeEventListener("DOMContentLoaded", initializePortfolioGallery);
	document.addEventListener("DOMContentLoaded", initializePortfolioGallery);
</script>

<style>
	.portfolio-gallery-section {
		background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);
	}

	.item {
		transition: all 0.3s ease;
		cursor: pointer;
	}

	.item:hover {
		transform: scale(1.1);
	}

	.preview-img {
		transition: all 0.3s ease;
	}

	.project-info {
		animation: fadeInUp 0.8s ease-out;
	}

	@keyframes fadeInUp {
		from {
			opacity: 0;
			transform: translateY(30px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}
</style>
